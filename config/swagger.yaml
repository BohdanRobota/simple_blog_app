openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: ''
info:
  description: This is a simple API
  version: "1.0.0"
  title: Simple Inventory API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Articles
    description: Some list
paths:
  /api/articles:
    get:
      tags:
        - Articles
      summary: searches article
      operationId: searchArticle
      description: search articles list
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
        '400':
          description: bad input parameter
    post:
      tags:
        - Articles
      summary: add new article
      operationId: addArticle
      description: Add new article
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
        description: Article to add      
  /api/articles/{id}:
    get:
      tags:
        - Articles
      summary: searches article by id
      operationId: searchArticleByID
      parameters:
       - name: id
         in: path
         description: ID of article to return
         required: true
         schema:
            type: integer
            format: int64
      description: search article by ID
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
        '400':
          description: bad input parameter
    delete:
      tags:
        - Articles
      summary: delete article by id
      operationId: deleteArticleByID
      parameters:
       - name: id
         in: path
         description: ID of article to delete
         required: true
         schema:
            type: integer
            format: int64
      description: delete article by ID
      responses:
        '200':
          description: deleted successful.Delete result matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
        '400':
          description: bad input parameter
    put:
      tags:
        - Articles
      summary: update article by id
      operationId: updateArticleByID
      parameters:
       - name: id
         in: path
         description: ID of article to delete
         required: true
         schema:
            type: integer
            format: int64
      description: update article by ID
      responses:
        '200':
          description: update successful.Update result matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
        '400':
          description: bad input parameter                
components:
  schemas:
    Article:
      type: object
      required:
        - title
        - description
      properties:
        _id:
          type: string
          example: "61a420e6bd072547f0cffb94"
        picture:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851.jpg
        title:
          type: string
          example: Article Title
        description:
          type: string
          example: Article Description